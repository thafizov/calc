import json
import pandas as pd
from datetime import datetime

def load_all_data_stocks():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∞–∫—Ü–∏—è–º –∏–∑ all_data_final.json"""
    with open('data/all_data_final.json', 'r', encoding='utf-8') as f:
        data = json.load(f)
    
    # –ò—â–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∞–∫—Ü–∏—è–º
    for tool in data['tools']:
        if tool.get('name') == '–ê–∫—Ü–∏–∏':
            return tool['items']
    return None

def load_moex_stocks():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ stocks_moex.json"""
    with open('data/stocks_moex.json', 'r', encoding='utf-8') as f:
        return json.load(f)

def compare_data():
    """–°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –¥–≤—É—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"""
    print("üîç –°–†–ê–í–ù–ï–ù–ò–ï –î–ê–ù–ù–´–• –ü–û –ê–ö–¶–ò–Ø–ú\n")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    all_data_stocks = load_all_data_stocks()
    moex_stocks = load_moex_stocks()
    
    if not all_data_stocks:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –ø–æ –∞–∫—Ü–∏—è–º –≤ all_data_final.json")
        return
    
    print(f"üìä –î–∞–Ω–Ω—ã–µ –∏–∑ all_data_final.json: {len(all_data_stocks)} –∑–∞–ø–∏—Å–µ–π")
    print(f"üìä –î–∞–Ω–Ω—ã–µ –∏–∑ stocks_moex.json: {len(moex_stocks)} –∑–∞–ø–∏—Å–µ–π\n")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö all_data
    print("=== –§–û–†–ú–ê–¢ –î–ê–ù–ù–´–• all_data_final.json ===")
    print("–°—Ç—Ä—É–∫—Ç—É—Ä–∞: [{\"date\": \"DD.MM.YYYY\", \"value\": —á–∏—Å–ª–æ}, ...]")
    print("–î–∞–Ω–Ω—ã–µ –≤—ã–≥–ª—è–¥—è—Ç –∫–∞–∫ –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞")
    print(f"–ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å: {all_data_stocks[0]}")
    print(f"–í—Ç–æ—Ä–∞—è –∑–∞–ø–∏—Å—å: {all_data_stocks[1]}")
    print(f"–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å: {all_data_stocks[-1]}")
    print()
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö moex
    print("=== –§–û–†–ú–ê–¢ –î–ê–ù–ù–´–• stocks_moex.json ===")
    print("–°—Ç—Ä—É–∫—Ç—É—Ä–∞: {\"YYYY-MM\": –∑–Ω–∞—á–µ–Ω–∏–µ, ...}")
    print("–î–∞–Ω–Ω—ã–µ –≤—ã–≥–ª—è–¥—è—Ç –∫–∞–∫ –º–µ—Å—è—á–Ω–∞—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å (returns)")
    moex_items = list(moex_stocks.items())
    print(f"–ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å: {moex_items[0]}")
    print(f"–í—Ç–æ—Ä–∞—è –∑–∞–ø–∏—Å—å: {moex_items[1]}")
    print(f"–ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å: {moex_items[-1]}")
    print()
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ all_data –≤ –º–µ—Å—è—á–Ω—É—é –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å
    print("=== –†–ê–°–ß–ï–¢ –ú–ï–°–Ø–ß–ù–û–ô –î–û–•–û–î–ù–û–°–¢–ò –ò–ó all_data_final.json ===")
    all_data_returns = {}
    
    for i in range(1, len(all_data_stocks)):
        current = all_data_stocks[i]
        previous = all_data_stocks[i-1]
        
        # –ü–∞—Ä—Å–∏–º –¥–∞—Ç—É –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–ª—é—á –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM
        date = datetime.strptime(current['date'], '%d.%m.%Y')
        key = f"{date.year:04d}-{date.month:02d}"
        
        # –í—ã—á–∏—Å–ª—è–µ–º –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å
        return_value = (current['value'] - previous['value']) / previous['value']
        all_data_returns[key] = return_value
    
    print(f"–í—ã—á–∏—Å–ª–µ–Ω–æ {len(all_data_returns)} –∑–Ω–∞—á–µ–Ω–∏–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏\n")
    
    # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
    print("=== –°–†–ê–í–ù–ï–ù–ò–ï –ó–ù–ê–ß–ï–ù–ò–ô ===")
    
    common_periods = set(all_data_returns.keys()) & set(moex_stocks.keys())
    print(f"–û–±—â–∏—Ö –ø–µ—Ä–∏–æ–¥–æ–≤: {len(common_periods)}")
    
    if len(common_periods) > 0:
        # –ë–µ—Ä–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–∏–æ–¥–æ–≤ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        sample_periods = sorted(list(common_periods))[:10]  # –ü–µ—Ä–≤—ã–µ 10
        
        print("\n–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–µ—Ä–≤—ã—Ö 10 –æ–±—â–∏—Ö –ø–µ—Ä–∏–æ–¥–æ–≤:")
        print("–ü–µ—Ä–∏–æ–¥       | all_data    | moex        | –†–∞–∑–Ω–∏—Ü–∞")
        print("-" * 55)
        
        total_diff = 0
        for period in sample_periods:
            val1 = all_data_returns[period]
            val2 = moex_stocks[period]
            diff = abs(val1 - val2)
            total_diff += diff
            
            print(f"{period}    | {val1:+.6f}  | {val2:+.6f}  | {diff:.6f}")
        
        avg_diff = total_diff / len(sample_periods)
        print(f"\n–°—Ä–µ–¥–Ω—è—è –∞–±—Å–æ–ª—é—Ç–Ω–∞—è —Ä–∞–∑–Ω–∏—Ü–∞: {avg_diff:.6f}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–µ—Ä–∏–æ–¥—ã
        print("\n–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5 –æ–±—â–∏—Ö –ø–µ—Ä–∏–æ–¥–æ–≤:")
        print("–ü–µ—Ä–∏–æ–¥       | all_data    | moex        | –†–∞–∑–Ω–∏—Ü–∞")
        print("-" * 55)
        
        last_periods = sorted(list(common_periods))[-5:]
        for period in last_periods:
            val1 = all_data_returns[period]
            val2 = moex_stocks[period]
            diff = abs(val1 - val2)
            
            print(f"{period}    | {val1:+.6f}  | {val2:+.6f}  | {diff:.6f}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∫—Ä—ã—Ç–∏–µ –ø–µ—Ä–∏–æ–¥–æ–≤
    print(f"\n=== –ü–û–ö–†–´–¢–ò–ï –ü–ï–†–ò–û–î–û–í ===")
    
    all_data_periods = set(all_data_returns.keys())
    moex_periods = set(moex_stocks.keys())
    
    only_in_all_data = all_data_periods - moex_periods
    only_in_moex = moex_periods - all_data_periods
    
    print(f"–¢–æ–ª—å–∫–æ –≤ all_data: {len(only_in_all_data)} –ø–µ—Ä–∏–æ–¥–æ–≤")
    if len(only_in_all_data) > 0:
        print(f"–ü—Ä–∏–º–µ—Ä—ã: {sorted(list(only_in_all_data))[:5]}")
    
    print(f"–¢–æ–ª—å–∫–æ –≤ moex: {len(only_in_moex)} –ø–µ—Ä–∏–æ–¥–æ–≤")
    if len(only_in_moex) > 0:
        print(f"–ü—Ä–∏–º–µ—Ä—ã: {sorted(list(only_in_moex))[:5]}")
    
    # –ü–µ—Ä–∏–æ–¥ –¥–∞–Ω–Ω—ã—Ö
    print(f"\n=== –í–†–ï–ú–ï–ù–ù–´–ï –†–ê–ú–ö–ò ===")
    all_data_first = min(all_data_periods) if all_data_periods else "N/A"
    all_data_last = max(all_data_periods) if all_data_periods else "N/A"
    moex_first = min(moex_periods) if moex_periods else "N/A"
    moex_last = max(moex_periods) if moex_periods else "N/A"
    
    print(f"all_data_final.json: {all_data_first} - {all_data_last}")
    print(f"stocks_moex.json:    {moex_first} - {moex_last}")

if __name__ == "__main__":
    compare_data() 